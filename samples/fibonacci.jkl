-- Naive fibonacci using recursion.
(def (fib n)
  (? (< n 2)
    n
    (+
      (fib (- n 1))
      (fib (- n 2))
    )
  )
)

-- Test the first 10 inputs.
-- WARNING, this may chew some CPU!
(for (i 14)
  (print i (fib i))
  (sleep 10)
)

-- More effecient and infinate fibonacci generator
(def (fibber)
  (def i 0)
  (def j 1)
  (Î» ()
    -- (set (i j)
    --   j
    --   (+ i j)
    -- )
    (def t (+ i j))
    (set i j)
    (set j t)
  )
)

-- Get the first 76 items from the generator.
(map (i 76 j (fibber))
  (print i j)
  (sleep 10)
  [i j]
)
